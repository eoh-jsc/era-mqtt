## NOTE:
## Configs in this file might be overridden by:
## 1. Environment variables which start with 'EMQX_' prefix
## 2. File $EMQX_NODE__DATA_DIR/configs/cluster-override.conf
## 3. File $EMQX_NODE__DATA_DIR/configs/local-override.conf
##
## The *-override.conf files are overwritten at runtime when changes
## are made from EMQX dashboard UI, management HTTP API, or CLI.
## All configuration details can be found in emqx.conf.example

node {
  name = "emqx@127.0.0.1"
  cookie = "emqxsecretcookie"
  data_dir = "data"
}

log {
  file_handlers.default {
    level = warning
    file = "log/emqx.log"
  }
}

cluster {
  name = emqxcl
  discovery_strategy = manual
}

retainer {
    enable = true
    msg_expiry_interval  =  0s
    msg_clear_interval  =  0s
    max_payload_size = 1MB
    backend {
        type = built_in_database
        storage_type = disc
        max_retained_messages = 0
    }
}

listeners.tcp.default {
  bind = "0.0.0.0:1883"
  max_connections = 1024000
}

listeners.ssl.default {
  bind = "0.0.0.0:8883"
  max_connections = 512000
  ssl_options {
    keyfile = "/etc/ssl/eoh-certs/private_key.pem"
    certfile = "/etc/ssl/eoh-certs/star_eoh_io_cert.crt"
    cacertfile = "/etc/ssl/eoh-certs/star_eoh_io_cert.crt"
  }
}

listeners.ws.default {
  bind = "0.0.0.0:8083"
  max_connections = 1024000
  websocket.mqtt_path = "/"
}

listeners.wss.default {
  bind = "0.0.0.0:8084"
  max_connections = 512000
  websocket.mqtt_path = "/"
  ssl_options {
    keyfile = "/etc/ssl/eoh-certs/private_key.pem"
    certfile = "/etc/ssl/eoh-certs/star_eoh_io_cert.crt"
    cacertfile = "/etc/ssl/eoh-certs/star_eoh_io_cert.crt"
  }
}

# listeners.quic.default {
#  enabled = true
#  bind = "0.0.0.0:14567"
#  max_connections = 1024000
#  keyfile = "etc/certs/key.pem"
#  certfile = "etc/certs/cert.pem"
#}

dashboard {
    listeners.http {
        bind = 18083
    }
    default_username = "admin"
    default_password = "public"
    https {
        enable = true
        acceptors = 4
        max_clients = 512
        port = 18083
        keyfile = "/etc/ssl/eoh-certs/privatge_key.pem"
        certfile = "/etc/ssl/eoh-certs/star_eoh_io_cert.crt"
    }
}

authentication = {
  mechanism = password_based
  backend = postgresql
  enable = true

  password_hash_algorithm {
    name = sha256
    salt_position = disable
  }

  database = emqx
  username = root
  password = password
  server = "postgres:5432"
  query = "SELECT password_hash FROM users where username = ${username} LIMIT 1"
}

authorization {
  deny_action = ignore
  no_match = deny
  cache = { enable = true }
  sources =  [
    {
      type = postgresql
      enable = true

      database = "emqx"
      username = "root"
      password = "password"
      server = "postgres:5432"
      query = "SELECT permission, action, topic FROM acl WHERE username = ${username}"
    }
  ]
}
